{"ast":null,"code":"import * as types from './actionTypes';\nimport axios from \"axios\";\nexport var getPrisons = function getPrisons() {\n  return function (dispatch) {\n    dispatch(spinnerOn());\n    axios.get(\"http://demo4752238.mockable.io/prisons\").then(function (res) {\n      dispatch({\n        type: types.GET_PRISONS,\n        payload: res.data.prisons\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: types.ERROR,\n        payload: err\n      });\n    }).finally(dispatch(spinnerOff()));\n  };\n};\nexport function spinnerOn() {\n  return {\n    type: types.SPINNER_ON\n  };\n}\nexport function spinnerOff() {\n  return {\n    type: types.SPINNER_OFF\n  };\n}\nexport function logOut() {\n  return {\n    type: types.LOGOUT\n  };\n}","map":{"version":3,"sources":["/home/Giambo/Projects/prisons-skill/src/states/actionCreators.js"],"names":["types","axios","getPrisons","dispatch","spinnerOn","get","then","res","type","GET_PRISONS","payload","data","prisons","catch","err","ERROR","finally","spinnerOff","SPINNER_ON","SPINNER_OFF","logOut","LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACxCA,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAU,wCAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAER,KAAK,CAACS,WAAd;AAA2BC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAA7C,OAAD,CAAR;AACH,KAHL,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVX,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAER,KAAK,CAACe,KAAd;AAAqBL,QAAAA,OAAO,EAAEI;AAA9B,OAAD,CAAR;AACH,KANL,EAOKE,OAPL,CAOab,QAAQ,CAACc,UAAU,EAAX,CAPrB;AAQH,GAVyB;AAAA,CAAnB;AAYP,OAAO,SAASb,SAAT,GAAqB;AACxB,SAAO;AACLI,IAAAA,IAAI,EAAER,KAAK,CAACkB;AADP,GAAP;AAGH;AAED,OAAO,SAASD,UAAT,GAAsB;AACzB,SAAO;AACLT,IAAAA,IAAI,EAAER,KAAK,CAACmB;AADP,GAAP;AAGH;AAED,OAAO,SAASC,MAAT,GAAkB;AACrB,SAAO;AACHZ,IAAAA,IAAI,EAAER,KAAK,CAACqB;AADT,GAAP;AAGH","sourcesContent":["import * as types from './actionTypes';\nimport axios from \"axios\";\n\nexport const getPrisons = () => dispatch => {\n    dispatch(spinnerOn());\n    axios.get(\"http://demo4752238.mockable.io/prisons\")\n        .then(res => {\n            dispatch({ type: types.GET_PRISONS, payload: res.data.prisons });\n        })\n        .catch(err => {\n            dispatch({ type: types.ERROR, payload: err });\n        })\n        .finally(dispatch(spinnerOff()));\n}\n\nexport function spinnerOn() {\n    return {\n      type: types.SPINNER_ON,\n    };\n}\n  \nexport function spinnerOff() {\n    return {\n      type: types.SPINNER_OFF,\n    };\n}\n\nexport function logOut() {\n    return {\n        type: types.LOGOUT,\n    }\n}\n\n  "]},"metadata":{},"sourceType":"module"}